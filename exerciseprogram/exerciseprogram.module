<?php


/**
 * Implementation of hook_menu()
 */ 
function exerciseprogram_menu() {
    $items['exerciseprogram/list'] = array(
        'title' => t('Træningsprogrammer'),
        'page callback' => 'exerciseprogram_get_list',
        //'access callback' => 'exerciseprogram_create_access',
        'access callback' => true,
        'type' => MENU_CALLBACK
    );
     $items['exerciseprogram/publiclist'] = array(
        'title' => t('Offentlige Træningsprogrammer'),
        'page callback' => 'exerciseprogram_get_public_list',
        //'access callback' => 'exerciseprogram_create_access',
        'access callback' => true,
        'type' => MENU_CALLBACK
    );
    $items['exerciseprogram/autocomplete'] = array(
        'title' => t('Træningsprogrammer'),
        'page callback' => 'exerciseprogram_autocomplete',
        'access callback' => true,
        'type' => MENU_CALLBACK
    );
    
    $items['exerciseprogram/editinfo/%'] = array(
        'title' => t('Rediger træningsprogram'),
        'page callback' => 'exerciseprogram_editinfo_program',
        'page arguments' => array(2),
        'access callback' => 'exerciseprogram_edit_access',
        'access arguments' => array(2),
        'type' => MENU_CALLBACK
    );
    
    $items['exerciseprogram/edit/%'] = array(
        'title' => t('Rediger træningsprogram'),
        'page callback' => 'exerciseprogram_edit_program',
        'page arguments' => array(2),
        'access callback' => 'exerciseprogram_edit_access',
        'access arguments' => array(2),
        'type' => MENU_CALLBACK
    );
    $items['exerciseprogram/edit/%/%'] = array(
        'title' => t('Rediger træningsprogram'),
        'page callback' => 'exerciseprogram_edit_program',
        'page arguments' => array(2,3),
        'access callback' => 'exerciseprogram_edit_access',
        'access arguments' => array(2),
        'type' => MENU_CALLBACK
    );
    $items['exerciseprogram/edit/%/%/%/%'] = array(
        'title' => t('Rediger træningsprogram'),
        'page callback' => 'exerciseprogram_edit_program',
        'page arguments' => array(2,3,4,5),
        'access callback' => 'exerciseprogram_edit_access',
        'access arguments' => array(2),
        'type' => MENU_CALLBACK
    );
    $items['exerciseprogram/delete/%'] = array(
	   'title' => t('Slet træningsprogram'),
	   'page callback' => 'exerciseprogram_delete',
	   'page arguments' => array(2),
	   'access callback' => 'exerciseprogram_edit_access',
	   'access arguments' => array(2),
	   'type' => MENU_CALLBACK,
    );
    $items['exerciseprogram/show/%'] = array(
	   'title' => t('Vis træningsprogram'),
	   'page callback' => 'exerciseprogram_show',
	   'page arguments' => array(2),
	   'access callback' => 'exerciseprogram_edit_access',
	   'access arguments' => array(2),
	   'type' => MENU_CALLBACK,
    );
    $items['exerciseprogram/showpublic/%'] = array(
	   'title' => t('Vis træningsprogram'),
	   'page callback' => 'exerciseprogram_show_public',
	   'page arguments' => array(2),
	   'access callback' => 'exerciseprogram_show_public_access',
	   'access arguments' => array(2),
	   'type' => MENU_CALLBACK,
    );
    $items['exerciseprogram/print/%'] = array(
	   'title' => t('Vis træningsprogram'),
	   'page callback' => 'exerciseprogram_print',
	   'page arguments' => array(2),
	   'access callback' => 'exerciseprogram_print_access',
	   'access arguments' => array(2),
	   'type' => MENU_CALLBACK,
    );
	 $items['exerciseprogram/print_compact/%'] = array(
	   'title' => t('Vis træningsprogram'),
	   'page callback' => 'exerciseprogram_print_compact',
	   'page arguments' => array(2),
	   'access callback' => 'exerciseprogram_print_access',
	   'access arguments' => array(2),
	   'type' => MENU_CALLBACK,
    );
    
    return $items;       
}

function exerciseprogram_block($op = 'list', $delta = 0, $edit = array()) {
    switch($op) {
        case 'list':
            $blocks['add_to_program']['info'] = t('Motionsplan - Add exercise to program - Block on exercise');
            return $blocks;
            break;
        
        case 'view':
            if($delta == 'add_to_program') {
                return exerciseprogram_addToProgram_block();
            }
            break;
    }
}

function exerciseprogram_addToProgram_form() {
    global $user;
    $sql = "SELECT pid, uid, uid_coach, name FROM {exercise_program} WHERE uid = %d OR uid_coach = %d ORDER BY name";
    $res = db_query($sql,$user->uid,$user->uid);
    
    $programs = array();
    while($r = db_fetch_array($res)) {
	$addDesc = '';
	if($r['uid_coach'] == $user->uid) {
	    $extraUser = user_load($r['uid']);
	    $addDesc = ' [Program til '.$extraUser->name.']';
	}
	$programs[$r['pid']] = $r['name'].$addDesc;
    }
    
    $form['pid'] = array(
        '#type' => 'select',
        '#title' => t('Tilføj øvelse til træningsprogram'),
        /*'#default_value' => $r['name'],*/
        '#options'=>$programs,
	'#attributes' => array('style' => 'width:225px;'),
        '#prefix'=>'',
        '#suffix'=>'',
    );
    
    $form['submit'] = array (
        '#type' => 'submit',
        '#value' => 'Tilføj',
    );
    return $form;
}

function exerciseprogram_addToProgram_form_submit($form, &$form_state) {
    exerciseprogram_add_node($form_state['values']['pid'],arg(1));
    $msg = 'Øvelsen er tilføjet træningsprogrammet "'.db_result(db_query("SELECT name FROM {exercise_program} WHERE pid = %d",$form_state['values']['pid'])).'"';
    drupal_set_message($msg,'status');
}


function exerciseprogram_addToProgram_block() {
    global $user;
    if(empty($user->uid) || arg(0) != 'node' || arg(2) != '') {
	    return array();
    }
    $sql = "SELECT type FROM {node} WHERE nid = %d";
    $type = db_result(db_query($sql,arg(1)));
    if($type != 'exercise') {
    	return array();
    }
    $sql = "SELECT COUNT(pid) FROM {exercise_program} WHERE uid = %d OR uid_coach = %d ORDER BY name";
    $num = db_result(db_query($sql,$user->uid,$user->uid));
    
    $content = '<p>Du har ingen træningsprogrammer.</p><p>'.l('Opret et træningsprogram','exerciseprogram/list').'</p>';
    if ($num > 0) {
	    $content = drupal_get_form('exerciseprogram_addToProgram_form');
    }
    return array('subject' => 'Træningsprogram', 'content' => $content);
}


function exerciseprogram_perm() {
  $perms =  array('create programs for other','create public programs');
  return $perms;
}


function exerciseprogram_show_public_access($pid) {
    $sql = "SELECT public FROM {exercise_program} WHERE pid = '%s'";
    $res = db_result(db_query($sql,$pid));
    if($res == 1) { return true; }
    return false;
}

function exerciseprogram_edit_access($pid) {
    global $user;
    $sql = "SELECT pid FROM {exercise_program} WHERE 
            (uid = '%s' OR uid_coach = '%s') AND pid = '%s'";
    $res = db_result(db_query($sql,$user->uid,$user->uid,$pid));
    if($res!==false) { return true; }
    return false;
}

function exerciseprogram_print_access($pid) {
    if(exerciseprogram_edit_access($pid) == true) {
	return true;
    }
    elseif(exerciseprogram_show_public_access($pid) == true) {
	return true;
    }
    return false;
}

function exerciseprogram_create_access() {
    global $user;
    if($user->uid) { return true; }
    return false;
}

function exerciseprogram_show() {
    if(arg(3) == 'delete') {
	exerciseprogram_delete_node(arg(2),arg(4));
    }
    
    $nids = exerciseprogram_get_nids(arg(2));
    if(sizeof($nids)<=0) {
        return '<strong>Der er endnu ikke tilføjet nogle træningsøvelser.<br />Du kan tilføje træningsøvelser til dit program under de enkelte træningsøvelser i menupunktet "Træningsøvelser".</strong>';
    }
    
    $sql = "SELECT name, description FROM {exercise_program} WHERE pid = %d";
    $r = db_fetch_array(db_query($sql,arg(2)));
    
    drupal_set_title($r['name'].' - Træningsprogram');
    
    
    $output = '';
    $output .= '<p>'.$r['description'].'</p>';
    $output .= '<p>';
    $output .= '<input type="button" class="form-submit" onclick="window.open(\'/exerciseprogram/print/'.arg(2).'\',null)" value="Udskriv printervenlig udgave" />';
    $output .= ' <input type="button" class="form-submit" onclick="window.open(\'/exerciseprogram/print_compact/'.arg(2).'/pdf\',null)" value="Udskriv kompakt version" />';
	$output .= ' <input type="button" class="form-submit" onclick="window.open(\'/exerciseprogram/print_compact/'.arg(2).'/exercisespdf\',null)" value="Udskriv øvelseskort" />';    
    $output .= '</p>';
    
    $output .= '<p>Du kan tilføje flere træningsøvelser til dit program under de enkelte træningsøvelser i menupunktet "Træningsøvelser".</p>';
    
    foreach($nids as $eid) {
	$r = db_result(db_query("SELECT COUNT(nid) FROM {node} WHERE status = 1 AND nid = %d",$eid));
	if($r > 0) {
	    $output .= node_view(node_load($eid),true,false,false);
	}
    }
    return $output;
}



function exerciseprogram_show_public() {
    
    $nids = exerciseprogram_get_nids(arg(2));
    $sql = "SELECT name, description FROM {exercise_program} WHERE pid = %d";
    $r = db_fetch_array(db_query($sql,arg(2)));
    drupal_set_title($r['name'].' - Træningsprogram');
    
    
    $output = '';
    $output .= '<p>'.$r['description'].'</p>';
    $output .= '<p>';
    $output .= '<input type="button" class="form-submit" onclick="window.open(\'/exerciseprogram/print/'.arg(2).'\',null)" value="Udskriv printervenlig udgave" />';
	$output .= ' <input type="button" class="form-submit" onclick="window.open(\'/exerciseprogram/print_compact/'.arg(2).'/pdf\',null)" value="Udskriv kompakt version" />';
	$output .= ' <input type="button" class="form-submit" onclick="window.open(\'/exerciseprogram/print_compact/'.arg(2).'/exercisespdf\',null)" value="Udskriv øvelseskort" />';	
    $output .= '</p>';
    
    foreach($nids as $eid) {
	$r = db_result(db_query("SELECT COUNT(nid) FROM {node} WHERE status = 1 AND nid = %d",$eid));
	if($r > 0) {
	    $output .= node_view(node_load($eid),true,false,false);
	}
    }
    return $output;
}


function exerciseprogram_print_compact() {
    $nids = exerciseprogram_get_nids(arg(2));
    if(sizeof($nids)<=0) {
        return '<strong>Du skal tilføje øvelser for at kunne udskrive</strong>';
    }
    
    $sql = "SELECT name, description FROM {exercise_program} WHERE pid = %d";
    $r = db_fetch_array(db_query($sql,arg(2)));
    
    drupal_set_title($r['name']);
    ?>
    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
    <html xmlns="http://www.w3.org/1999/xhtml" lang="da" xml:lang="da">
    <head>
    <title><?php echo $r['name']; ?> | Motionsplan.dk</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <style type="text/css">
        BODY {
            background-color:#fff;
            color:#000;
            font-family:tahoma,verdana,helvetica,sans-serif;
            font-size:70%;
        }
        H1, H2, H3, H4, H5 {
            margin:0;
        }
        H1 {
            font-size:1.5em;
        }
        H5 {
            font-size:1.1em;
            margin-top:10px;
            font-weight:normal;
        }
        H2 {
            margin-top:20px;
            font-size:1.3em;
        }
        div.intro {
            font-style: italic;
            margin-top:10px;
            margin-bottom:10px;
        }
        div.desc {
            margin-bottom:10px;
        }
        H3 {
            margin-top:20px;
            margin-bottom:50px;
        }
    </style>
    </head> 
    <body>
    <h1 style="float:left;width:50%;">
        Træningsprogram: <?php echo $r['name']; ?>
	</h1>
	<div style="float:left;text-align:right;width:50%;">
		Udskrevet fra motionsplan.dk den <?php echo date("j/n-y"); ?>
	</div><div style="clear:both;"></div>
	<br />
	<p><?php echo $r['description']; ?></p>
	<table border="1" width="100%" cellspacing="0" cellpadding="5">
		<tr>
			<th>Øvelse</th>
			<th>Beskrivelse</th>
			<th>Gentagelser</th>
			<th>Styrke</th>
			<th>Kommentar</th>
		</tr>
    <?php
    foreach($nids as $no=>$eid) {
        $e = node_load($eid);
    ?>
		<tr>
			<td width="230">
				<strong><?php echo $e->title; ?></strong><br />
				<?php
				$imgs = array();
				foreach($e->field_exercise_images as $img) {
					$imgs[] = str_replace('/files/','/files/imagecache/exercisePictureCompact/',$img['filepath']);
				}
				if(sizeof($imgs) > 3) {
					$tmp_imgs = array();
					$tmp_imgs[] = $imgs[0];
					$tmp_imgs[] = $imgs[floor(sizeof($imgs)/2)];
					$tmp_imgs[] = $imgs[sizeof($imgs)-1];
					$imgs = $tmp_imgs;
				}
				?>
				<?php
				foreach($imgs as $img) { echo '<img src="'.url($img).'" alt="" /> '; }
				?>
				
			</td>
			<td width="20%">
				<?php
				echo $e->field_exercise_intro[0]['value'];
				?>
			</td>
			<td width="10%" style="text-align:center;">
				<strong>X</strong>
			</td>
			<td width="8%" style="text-align:right;">
				RM
			</td>
			<td valign="top">
				
			</td>
		</tr>
		<!--
            <?php
	    
	    
            foreach($e->field_exercise_images as $img) {
                $img = str_replace('/files/','/files/imagecache/exercisePicture/',$img['filepath']);
                ?>
                <img src="/<?php echo $img ?>" alt="" />
                <?php
            }
            ?>
        </div>
		-->
        <?php
    }
    ?>
	</table>
    </body>
    </html>
    <?php
}

function exerciseprogram_print() {
    $nids = exerciseprogram_get_nids(arg(2));
    if(sizeof($nids)<=0) {
        return '<strong>Du skal tilføje øvelser for at kunne udskrive</strong>';
    }
    
    $sql = "SELECT name, description FROM {exercise_program} WHERE pid = %d";
    $r = db_fetch_array(db_query($sql,arg(2)));
    
    drupal_set_title($r['name']);
    ?>
    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
    <html xmlns="http://www.w3.org/1999/xhtml" lang="da" xml:lang="da">
    <head>
    <title><?php echo $r['name']; ?> | Motionsplan.dk</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <style type="text/css">
        BODY {
            background-color:#fff;
            color:#000;
            font-family:tahoma,verdana,helvetica,sans-serif;
            font-size:80%;
        }
        H1, H2, H3, H4, H5 {
            margin:0;
        }
        H1 {
            font-size:1.5em;
        }
        H5 {
            font-size:1.1em;
            margin-top:10px;
            font-weight:normal;
        }
        H2 {
            margin-top:20px;
            font-size:1.3em;
        }
        div.intro {
            font-style: italic;
            margin-top:10px;
            margin-bottom:10px;
        }
        div.desc {
            margin-bottom:10px;
        }
        H3 {
            margin-top:20px;
            margin-bottom:50px;
        }
    </style>
    </head> 
    <body>
    <?php
    foreach($nids as $no=>$eid) {
    ?>
        <h1>
            Træningsprogram: <?php echo $r['name']; ?>
            <br />
            Øvelse <?php echo($no+1);?> af <?php echo sizeof($nids);?>
        </h1>
        <h5><?php echo $r['description']; ?>
        <?php
        $e = node_load($eid);
        ?>
        <h2>Øvelse: <?php echo $e->title; ?></h2>
        <div class="intro"><?php echo $e->field_exercise_intro[0]['value']; ?></div>
        <div class="desc"><?php echo $e->field_exercise_guide[0]['value']; ?></div>
        <div class="img">
            <?php 
            foreach($e->field_exercise_images as $img) {
                $img = str_replace('/files/','/files/imagecache/exercisePicture/',$img['filepath']);
                ?>
                <img src="/<?php echo $img ?>" alt="" />
                <?php
            }
            ?>
        </div>
        <h3 style="page-break-after:always">Udskrevet fra www.motionsplan.dk</h3>
        <?php
    }
    ?>
    </body>
    </html>
    <?php
}

function exerciseprogram_delete($id) {
    global $user;
    $sql = "SELECT pid FROM {exercise_program} WHERE 
            uid = '%s' AND pid = '%s'";
    $pid = db_result(db_query($sql,$user->uid,$id));
    if($pid!==false) {
        $sql = "DELETE FROM {exercise_program} WHERE pid = '%s'";
        db_query($sql,$pid);
        $sql = "DELETE FROM {exercise_exercises} WHERE pid = '%s'";
        db_query($sql,$pid);
    }
    drupal_goto('exerciseprogram/list');
} 

function exerciseprogram_get_list() {
    global $user;
    
    if(empty($user->uid)) {
        //user not logged in - tell the user about what we can do
        $output = '<p>Som registeret bruger på Motionsplan.dk har du mulighed 
                for at oprette dine egne træningsprogrammerne. Træningsprogrammerne
                opbygges ud fra de øvelserne vores eksperter har oprettet.</p>';
        $output .= '<p>Du har altid mulighed for at udskrive programmerne i en
                printervenlig udgave, du kan have med dig</p>';
        $output .= '<p><a href="'.url('user/register').'">Klik her for at oprette dig som bruger</a></p>';
        return $output;
    }
    
    $list = exerciseprogram_get_users_exercises();
    if(sizeof($list)<=0) {
        $output .= '<p><strong>Ingen træningsprogrammer oprettet endnu.</strong></p>';
        $output .= '<p>Opret dit eget program herunder.</p>';
    }
    else {
        $output .= '<script type="text/javascript"> function deleteExerciseProgram(pid) {
            if(confirm("Er du sikker på du vil slette træningsprogrammet?")) {
                location.href="/exerciseprogram/delete/"+pid
            }
        } </script>';
        $output .= '<p>Du kan redigere øvelser på dine træningsprogrammer herunder.</p>';
        $output .= '<table><thead><tr>';
        $output .= '<th>Træningsprogrammer</th>';
        if(user_access('create programs for other')) {
            $output .= '<th>Tilknyttet til bruger</th>';
        }
        $output .= '<th>Antal øvelser</th>';
        $output .= '<th>Handlinger</th>';
        $output .= '</tr></thead>';
        $i=0;
        foreach($list as $l) {
            $i++; $c = 'even';
            if($i%2!=0) { $c = 'odd'; }
            
            $output .= '<tbody><tr class="'.$c.'">';
            $output .= '<td><a href="/exerciseprogram/show/'.$l['pid'].'">';
            $output .= $l['name'].'</a><br /><small>'.$l['desc'].'</small></td>';
            if(user_access('create programs for other')) {
                $extraText = 'dig selv';
                if($l['public'] == 1) {
		    $extraText = 'Offentligt';
		}
		else {
		    if(!empty($l['uid_coach'])) {
			//find out if we are showing it to the coach or to the user
			if($l['uid_coach'] == $user->uid) {
			    //we are showing it to the coache
			    $sql = "SELECT uid, name FROM {users} WHERE uid = %d";
			    $r = db_fetch_array(db_query($sql,$l['uid']));
			    $extraText = l($r['name'],'user/'.$r['uid']);
			}
			else {
			    $extraText = 'dig selv';
			}
		    }
		}
                $output .= '<td>'.$extraText.'</td>';
            }
            $output .= '<td>'.$l['exercises'].' øvelser</td>';
            $output .= '<td>';
            $output .= l('Rediger info','exerciseprogram/editinfo/'.$l['pid']);
            //$output .= ' &nbsp; '.l('Rediger øvelser','exerciseprogram/edit/'.$l['pid']);
            $output .= ' &nbsp; <a href="javascript:deleteExerciseProgram(\''.$l['pid'].'\')">Slet</a></td>';
            $output .= '</tr></tbody>';
        }
        $output .= '</tbody></table>';
    }
    $output .= '<h1 class="title">Opret nyt træningsprogram</h1>';
    $output .= drupal_get_form('exerciseprogram_add_form');
    return $output;
}
function exerciseprogram_get_public_list() {
    $list = array();
    $sql = "SELECT pid, name, description as descr, uid, public FROM {exercise_program}
            WHERE public = 1 ORDER BY name";
    $res = db_query($sql);
    while($r = db_fetch_array($res)) {
        $sql = "SELECT COUNT(DISTINCT e.nid) FROM {exercise_exercises} e, {node} n
                    WHERE e.pid = '".$r['pid']."' AND n.nid = e.nid AND n.status = 1 AND n.type = 'exercise'";
        $noe = db_result(db_query($sql));
            
        $list[] = array('name'=>$r['name'],'desc'=>$r['descr'],
                                    'pid'=>$r['pid'],'exercises'=>$noe,
                                    'uid'=>$r['uid']);
    }
    
    $output .= '<p>Se motionsplan.dk offentlige træningsprogrammer herunder.</p>';
    $output .= '<table><thead><tr>';
    $output .= '<th>Træningsprogrammer</th>';
    $output .= '<th>Antal øvelser</th>';
    $output .= '<th>Oprettet af</th>';
    $output .= '</tr></thead>';
    $i=0;
    foreach($list as $l) {
        $i++; $c = 'even';
        if($i%2!=0) { $c = 'odd'; }
            
        $output .= '<tbody><tr class="'.$c.'">';
        $output .= '<td><a href="/exerciseprogram/showpublic/'.$l['pid'].'">';
        $output .= $l['name'].'</a><br /><small>'.$l['desc'].'</small></td>';
        $output .= '<td>'.$l['exercises'].' øvelser</td>';
        $output .= '<td>';
	$uuser = user_load($l['uid']);
        $output .= l($uuser->name,'user/'.$uuser->uid);
        $output .= '</tr></tbody>';
    }
    $output .= '</tbody></table>';
    
    return $output;
}

function exerciseprogram_editinfo_program($nid) {
    $output = '<p><strong>'.l('Tilbage til træningsprogrammerne','exerciseprogram/list').'</strong></p>';
    $output .= drupal_get_form('exerciseprogram_add_form');
    return $output;
}


function exerciseprogram_get_users_exercises() {
    global $user;
    $exerciseList = array();
    if($user->uid) {
        
        $sql = "SELECT pid, name, description as descr, uid, uid_coach, public FROM {exercise_program}
            WHERE uid = '".$user->uid."' OR uid_coach = '".$user->uid."' ORDER BY name";
        $res = db_query($sql);
        while($r = db_fetch_array($res)) {
            $sql = "SELECT COUNT(DISTINCT e.nid) FROM {exercise_exercises} e, {node} n
                    WHERE e.pid = '".$r['pid']."' AND n.nid = e.nid AND n.status = 1 AND n.type = 'exercise'";
            $noe = db_result(db_query($sql));
            
            $exerciseList[] = array('name'=>$r['name'],'desc'=>$r['descr'],
                                    'pid'=>$r['pid'],'exercises'=>$noe,
                                    'uid_coach'=>$r['uid_coach'],'uid'=>$r['uid'],'public'=>$r['public']);
        }
        
    } 
    return $exerciseList;
}

function exerciseprogram_autocomplete($s) {
    $matches = array();
    $sql = "SELECT uid, name FROM {users} WHERE LOWER(name) LIKE LOWER('%s%%')";
    $result = db_query_range($sql,$s,0,20);
    while ($r = db_fetch_array($result)) {
        $v = $r['name'].' | '.$r['uid'];
        $matches[$v] = check_plain($v);
    }
    drupal_json($matches);
    exit; //in case of Devel module or something
}


function exerciseprogram_add_form() {
    $r = array();
    $r['name'] = '';
    $r['description'] = '';
    
    $edit = false;
    
    if(arg(1)=='editinfo') {
        $sql = "SELECT uid, uid_coach, name, description, public FROM {exercise_program}
                WHERE pid = %d";
        $r = db_fetch_array(db_query($sql,arg(2)));
        
	if($r['uid_coach'] != '') {
	    $r['uid'] = db_result(db_query("SELECT name FROM {users} WHERE uid = %d",$r['uid'])).' | '.$r['uid'];
	}
	else {
	    $r['uid'] = '';
	}
        $edit = true;
        
        $form['edit'] = array(
            '#type' => 'value',
            '#value' => arg(2),
        );
        
    }

    if(user_access('create programs for other')) {
        $form['add_to_user'] = array(
            '#type' => 'textfield',
            '#title' => t('Tilknyttes til bruger'),
            '#maxlength' => 128,
            '#autocomplete_path' => 'exerciseprogram/autocomplete',
            '#default_value' => $r['uid'],
            '#description' => t('Hvis du ønsker at tilknytte programmet til en person, skal det vælges her. Ellers tilkobles programmet til dig selv'),
            '#prefix'=>'',
            '#suffix'=>'',
        );
    }
    if(user_access('create public programs')) {
	$form['public'] = array(
	    '#type' => 'checkbox',
	    '#default_value' => $r['public'],
	    '#title' => 'Offentligt træningsprogram',
	    '#description' => 'Et træningsprogram der kan ses af alle brugere på sitet'
	);
    }
    
    $form['name'] = array(
        '#type' => 'textfield',
        '#title' => t('Navn på træningsprogram'),
        '#maxlength' => 150,
        '#default_value' => $r['name'],
        '#description' => t('Indtast navnet på træningsprogrammet'),
        '#prefix'=>'',
        '#suffix'=>'',
    );
    $form['description'] = array( 
        '#type' => 'textarea',
        '#title' => t('Beskrivelse af træningsprogrammet'),
        '#default_value' => $r['description'],
        '#rows' => 3,
        '#description' => t('Indtast en kort beskrivelse af træningsprogrammet'),
    );
    
    if($edit) {
        $btnValue = 'Opdater træningsprogram';
    }
    else {
        $btnValue = 'Opret træningsprogram';
    }
    $form['submit'] = array (
        '#type' => 'submit',
        '#value' => $btnValue,
    );
    return $form;
}

function exerciseprogram_add_form_validate($form, &$form_state) {
    if($form_state['values']['name'] == '') {
        form_set_error('name', t('Du skal indtaste et navn til dit træningsprogram'));
    }
}

function exerciseprogram_add_form_submit($form, &$form_state) {
    global $user;
    $tuid = '';
    if(trim($form_state['values']['add_to_user']) != '' && user_access('create programs for other')) {
        list($name,$tuid) = explode('|',$form_state['values']['add_to_user']);
        $tuid = intval($tuid);
        if($tuid<=0) {
            $tuid='';
        }
	
    }
    
    $public = 0;
    if(!empty($form_state['values']['public'])) { $public = 1; $tuid = ''; }
    
    if(!empty($form_state['values']['edit'])) {
        if(!empty($tuid)) {
            $sql = "UPDATE {exercise_program} SET uid_coach = %d, uid = %d, 
                    name = '%s', description = '%s', public = %d WHERE pid = %d";
            db_query($sql,$user->uid,$tuid,$form_state['values']['name'],$form_state['values']['description'],$public,$form_state['values']['edit']);   
        }
        else {
            $sql = "UPDATE {exercise_program} SET uid = %d,
                    name = '%s', description = '%s', public = %d WHERE pid = %d";
            db_query($sql,$user->uid,$form_state['values']['name'],$form_state['values']['description'],$public,$form_state['values']['edit']);
        }
        drupal_set_message('Træningsprogrammet er opdateret');
    }
    else {
        if(!empty($tuid)) {
            $sql = "INSERT INTO {exercise_program} (uid_coach, uid, name, description, created, public)
            VALUES ('".$user->uid."',".$tuid.",'%s','%s',".time().", %d)";
            db_query($sql,$form_state['values']['name'],$form_state['values']['description'],$public);   
        }
        else {
            $sql = "INSERT INTO {exercise_program} (uid, name, description, created, public)
            VALUES ('".$user->uid."','%s','%s',".time().", %d)";
            db_query($sql,$form_state['values']['name'],$form_state['values']['description'],$public);
        }
    }
} 

function exerciseprogram_get_name($pid) {
    return db_result(db_query("SELECT name FROM {exercise_program} WHERE pid = '%s'",$pid));
}

function exerciseprogram_get_category_nids($tid) {
    $sql = "SELECT tn.nid FROM {term_node} tn, {node} n 
            WHERE n.nid = tn.nid AND n.status > 0 AND tn.tid = '%s'";
    $res = db_query($sql,$tid);
    
    $nids = array();
    while($r = db_fetch_array($res)) { $nids[] = $r['nid']; }
    return $nids;
}

function exerciseprogram_style_exercise($nid,$isOnProgram) {
    $node = node_load($nid);
    $output = '<div class="exercistlist">';
    if(!empty($node->field_exercise_images[0]['filepath'])) {
        
        $output .= '<div class="photo">';
        $output .= '<img src="/sites/default/files/imagecache/exercisePictureList/';
        $output .= $node->field_exercise_images[0]['filepath'];
        $output .= '" alt="" /></div>';
    }
    $output .= '<h2>'.$node->title.'</h2>';
    $output .= $node->field_exercise_intro[0]['value'];
    if($isOnProgram) {
        $output .= '<br /><strong>Er tilføjet træningsprogrammet</strong>';
        $output .= ' <a href="/exerciseprogram/edit/'.arg(2).'/'.arg(3).'/delete/'.$nid.'">Slet fra træningsprogram</a>';
    }
    else {
        $output .= '<br /><strong><a href="/exerciseprogram/edit/'.arg(2).'/'.arg(3).'/add/'.$nid.'">Tilføj til træningsprogram</a></strong>';
    }
    $output .= '<hr /></div>';
    return $output;
}


function exerciseprogram_edit_program($pid,$tid='',$action='',$info=null) {
    if($action=='add') {
        exerciseprogram_add_node($pid,$info);
    }
    elseif($action=='delete') {
        exerciseprogram_delete_node($pid,$info);
    }
    $nidsprogram = exerciseprogram_get_nids($pid);
    
    $output = '';
    $output .= '<p>Du har herunder mulighed for at tilføje øvelser til dit træningsprogram
            <strong>'.exerciseprogram_get_name($pid).'</strong></p>';
            
    $output .= '<p><strong>'.l('Tilbage til træningsprogrammerne','exerciseprogram/list').'</strong></p>';
    
    
    $programExercises = array();
    foreach($nidsprogram as $nid) {
        $sql = "SELECT nid, title FROM {node} WHERE nid = %s";
        $r = db_fetch_array(db_query($sql,$nid));
        $tmp = l($r['title'],'node/'.$r['nid']);
	if(arg(3) == '') { $x = 'x'; } else { $x = arg(3); } 
        $tmp .= ' (<a href="/exerciseprogram/edit/'.arg(2).'/'.$x.'/delete/'.$r['nid'].'">Slet</a>)';
        $programExercises[] =  $tmp;
    }
    $output .= '<p>Dit træningsprogram består af følgende øvelser:<br /><strong>';
    if(sizeof($programExercises)>0) {
        $output .= '<ul><li>';
        $output .= implode('</li><li>',$programExercises);
        $output .= '</li></ul>';
    }
    else {
        $output .= 'Der er endnu ikke tilføjet nogen øvelser til programmet';
    }
    $output .= '</strong></p>';
    
    // class="tagadelic level1" rel="tag"
    $output .= theme('exerciseprogram_weighted_tags',tagadelic_sort_tags(tagadelic_get_weighted_tags(array(1))));
    
    if(empty($tid)) {
        $output .= '<p><h2 class="title">Vælg et nøgleord ovenfor, for at tilføje øvelser</h2></p>';
    }
    else {
        $nids = exerciseprogram_get_category_nids($tid);
        foreach($nids as $nid){
            $isOnProgram = false;
            if(in_array($nid,$nidsprogram)) {
                $isOnProgram = true;
            }
            $output .= exerciseprogram_style_exercise($nid,$isOnProgram);
        }
    }
    
    
    return $output;
}

function exerciseprogram_add_node($pid,$nid) {
    $sql = "INSERT INTO {exercise_exercises} (pid,nid,created) VALUES ('%s','%s','%s')";
    db_query($sql,$pid,$nid,time());
} 
function exerciseprogram_delete_node($pid,$nid) {
    $sql = "DELETE FROM {exercise_exercises} WHERE pid = '%s' AND nid = '%s'";
    db_query($sql,$pid,$nid);
} 

function exerciseprogram_get_nids($pid) {
    $sql = "SELECT DISTINCT nid FROM {exercise_exercises} WHERE pid = '%s'";
    $res = db_query($sql,$pid);
    $nids = array();
    while($r = db_fetch_array($res)) { $nids[] = $r['nid']; }
    return $nids;
}


function theme_exerciseprogram_weighted_tags($terms) {
    $output = '<div style="border-top:1px solid #d6ddb9;border-bottom:1px solid #d6ddb9">';
    foreach($terms as $term) {
        $output .= l($term->name, 'exerciseprogram/edit/'.arg(2).'/'.$term->tid, array('attributes' => array('class' => "tagadelic level$term->weight", 'rel' => 'tag'))) ." \n";
    }
    $output .= '</div>';
    return $output;
}
function exerciseprogram_theme() {
    return array(
        'exerciseprogram_weighted_tags' => array('arguments' => array('terms' => NULL))
    );
}
