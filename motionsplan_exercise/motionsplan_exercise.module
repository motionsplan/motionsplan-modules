<?php

include_once('motionsplan_exercise.features.inc');


function motionsplan_exercise_filter($op, $delta = 0, $format = -1, $text = '') {
  // The "list" operation provides the module an opportunity to declare both how
  // many filters it defines and a human-readable name for each filter. Note that
  // the returned name should be passed through t() for translation.
  if ($op == 'list') {
    return array(
      0 => t('Motionsplan - include exercises in nodes')
    );
  }

  // All operations besides "list" provide a $delta argument so we know which
  // filter they refer to. We'll switch on that argument now so that we can
  // discuss each filter in turn.
  switch ($delta) {

    // First we define the simple string substitution filter.
    case 0:

      switch ($op) {
        // This description is shown in the administrative interface, unlike the
        // filter tips which are shown in the content editing interface.
        case 'description':
          return t('Substitutes [motionsplan:form_name] tags with the a form from the module.');

          // We don't need the "prepare" operation for this filter, but it's required
          // to at least return the input text as-is.
        case 'prepare':
          return $text;

          // The actual filtering is performed here. The supplied text should be
          // returned, once any necessary substitutions have taken place.
        case 'process':
          return motionsplan_exercise_filter_process($text, $filter, $format);

      }
      break;
  }
}

function motionsplan_exercise_filter_process($text, $filter, $format) {
  return preg_replace_callback('@\[motionsplan-exercise:?(.*)\]@', '_motionsplan_exercise_display_embed', $text);
}

function _motionsplan_exercise_display_embed($matches) {
  $ids = explode(',', $matches[1]);

  if (empty($ids)) {
      return;
  }

  $presetname = 'exercisePictureList';
  $preset = imagecache_preset_by_name($presetname);

  foreach ($ids as $id) {
    $node = node_load(intval($id));
    if (!$node) {
        continue;
    }  
    $output .= '<table>';    
    $output .= '<tr>';
    $output .= '<td width="20%">';    
    if (!empty($node->field_exercise_images[0]['filepath'])) {
      $src = $node->field_exercise_images[0]['filepath'];
      $dst = imagecache_create_path($presetname, $src);
      if (file_exists($dst) || imagecache_build_derivative($preset['actions'], $src, $dst)) {
        $file = $dst;        
        $output .= '<div class="photo"><a href="'.url('node/'.$node->nid).'"><img src="/'.$file.'" alt="" /></a></div>';
      }
    }
    $output .= '</td><td width="80%">';
    $output .= '<strong><a href="'. url('node/'.$node->nid) . '">'. check_plain($node->title) .'</a></strong><br />';
    $output .= strip_tags($node->field_exercise_intro[0]['value']);
    $output .= '</td></tr>';    
    $output .= '</table>';     
  }
  return $output;
}
